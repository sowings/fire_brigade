<form class="formsearch" script="retention_overview.js,retention_overview_iconography.js,retention_overview_table_bars.js" stylesheet="retention_overview.css">
  <label>Retention Overview</label>

  <row>
    <html>
<div id="fire_brigade_help">
</div>
    </html>
  </row>

  <fieldset submitButton="false">
    <input type="text" token="bucket_host" searchWhenChanged="true" />
    <input type="text" token="disk_host" searchWhenChanged="true" />
    <input type="text" token="volume_host" searchWhenChanged="true" />
    <input type="text" token="volume_title" searchWhenChanged="true" />
    <input type="text" token="time_host" searchWhenChanged="true" />
  </fieldset>

  <searchTemplate>
<![CDATA[earliest=@d `_fb_summary_recs("*")`
| stats sum(eval(if(state="hot" OR state="warm", sizeOnDiskMB, 0))) AS homedisk, 
  sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS colddisk,
  dc(eval(if(state="hot", path, null()))) AS hot, 
  dc(eval(if(state="warm", path, null()))) AS warm, 
  dc(eval(if(state="cold", path, null()))) AS cold, 
  sum(sizeOnDiskMB) AS totaldisk
  max(endEpoch) AS endEpoch,
  min(startEpoch) AS startEpoch
  by orig_host, index
| join type=left orig_host, index
  [ | rest /services/data/indexes
    | fields splunk_server title, homePath.maxDataSizeMB, coldPath.maxDataSizeMB, maxTotalDataSizeMB, maxHotBuckets maxWarmDBCount, frozenTimePeriodInSecs
    | rename homePath.maxDataSizeMB AS homelimit
        coldPath.maxDataSizeMB AS coldlimit
        splunk_server AS orig_host
        title AS index ]
| eval homewarn=case(isnull(homelimit), null(), homedisk > .9 * homelimit, "homewarn", 1=1, null())
| eval coldwarn=case(isnull(coldlimit), null(), colddisk > .9 * coldlimit, "coldwarn", 1=1, null())
| eval totalwarn=if(totaldisk > .9 * maxTotalDataSizeMB, "totalwarn", null())
| eval hotbkt=case(hot > maxHotBuckets, "quar", hot > .9 * maxHotBuckets, "hotwarn", 1=1, null())
| eval warmbkt=if(warm > .9 * maxWarmDBCount, "warmwarn", null())
| eval span_back=round(relative_time(now(), "@d+1h")) - startEpoch
| eval span_pct=round(span_back / frozenTimePeriodInSecs * 100)
| rename comment AS "1 - quar, 2 - warn, 3 - extreme"
| eval timewarn=case(totaldisk > .9 * maxTotalDataSizeMB AND span_pct < 50, 3,
                     totaldisk > .9 * maxTotalDataSizeMB AND span_pct < 90, 2,
                     totaldisk > .9 * maxTotalDataSizeMB AND span_back > frozenTimePeriodInSecs, 3,
                     span_back > frozenTimePeriodInSecs, 1)
| stats count
  sum(hot) AS hot, sum(warm) AS warm, sum(cold) AS cold
  values(warmbkt) AS warmbkt, values(hotbkt) AS hotbkt
  values(totalwarn) AS totalwarn, values(homewarn) AS homewarn, values(coldwarn) AS coldwarn
  max(timewarn) AS timewarn
  sum(*disk) AS *disk
  by orig_host
| fillnull value=0 colddisk
| eval timewarn=case(timewarn=3, "extreme",
                     timewarn=2, "warn",
                     timewarn=1, "quar",
                     1=1, null())
| table orig_host, count, hot, warm, cold, hotbkt, warmbkt, homedisk, homewarn, colddisk, coldwarn, totaldisk, totalwarn, timewarn]]>
  </searchTemplate>

  <row>
    <table id="retention_overview_bucket_states">
      <title>Bucket States</title>
      <option name="link.visible">false</option>
      <searchPostProcess>table orig_host, count, hot, hotbkt, warm, warmbkt, cold
| rename 
    orig_host AS Host
    count AS Indexes
    hot AS "Hot Buckets"
    hotbkt AS "Hot Status"
    warm AS "Warm Buckets"
    warmbkt AS "Warm Status"
    cold AS "Cold Buckets"
</searchPostProcess>
    </table>
  </row>

  <row>
    <table id="retention_overview_bucket_detail">
      <title>Bucket information for $bucket_host$</title>
      <option name="link.visible">false</option>
      <option name="count">50</option>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs($bucket_host$, "*")`
| stats 
  dc(eval(if(state="hot", path, null()))) AS hot
  dc(eval(if(state="warm", path, null()))) AS warm
  dc(eval(if(state="cold", path, null()))) AS cold
  by orig_host, index
| eval title=index
| join type=left [| rest /services/data/indexes splunk_server=$bucket_host$ | fields title, maxHotBuckets maxWarmDBCount ]
| eval hotbkt=case(hot > maxHotBuckets, "quar", hot > .9 * maxHotBuckets, "hotwarn", 1=1, null())
| eval warmbkt=if(warm > .9 * maxWarmDBCount, "warmwarn", null())
| table index, hot, maxHotBuckets, hotbkt, warm, warmbkt, maxWarmDBCount, cold
| rename 
  index AS Index
  hot AS "Hot Buckets"
  maxHotBuckets AS "Hot Limit"
  hotbkt AS "Hot Status"
  warm AS "Warm Buckets"
  maxWarmDBCount AS "Warm Limit"
  warmbkt AS "Warm Status"
  cold AS "Cold Buckets"]]>
      </searchString>
    </table>
  </row>

  <row>
    <table id="retention_overview_disk_states">
      <title>Disk States</title>
      <option name="link.visible">false</option>
      <searchPostProcess><![CDATA[table orig_host, count, homedisk, homewarn, colddisk, coldwarn, totaldisk, totalwarn
| foreach *disk [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
    orig_host AS Host
    count AS Indexes
    homedisk AS "homePath Space"
    homewarn AS "Home Status"
    colddisk AS "coldPath Space"
    coldwarn AS "Cold Status"
    totaldisk AS "Total Disk"
    totalwarn AS "Total Space Status"]]>
      </searchPostProcess>
    </table>
  </row>

  <row>
    <table id="retention_overview_disk_detail">
      <title>Disk information for $disk_host$</title>
      <option name="link.visible">false</option>
      <option name="count">50</option>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs($disk_host$, "*")`
| stats 
  sum(eval(if(state="hot" OR state="warm", sizeOnDiskMB, 0))) AS homedisk
  sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS colddisk
  sum(sizeOnDiskMB) AS totaldisk
  by orig_host, index
| eval title=index
| join type=left [
  | rest /services/data/indexes splunk_server=$disk_host$
  | fields title, homePath.maxDataSizeMB, coldPath.maxDataSizeMB, maxTotalDataSizeMB  ]
| eval homewarn=case(isnull('homePath.maxDataSizeMB'), null(), homedisk > .9 * 'homePath.maxDataSizeMB', "homewarn", 1=1, null())
| eval coldwarn=case(isnull('coldPath.maxDataSizeMB'), null(), colddisk > .9 * 'coldPath.maxDataSizeMB', "coldwarn", 1=1, null())
| eval totalwarn=if(totaldisk > .9 * maxTotalDataSizeMB, "totalwarn", null())
| rename command AS "Yes, this is a redundant rename, but we want to pretty print"
| rename homePath.maxDataSizeMB AS homelimit, coldPath.maxDataSizeMB AS coldlimit, maxTotalDataSizeMB AS totallimit
| table index, homedisk, homelimit, homewarn, colddisk, coldlimit, coldwarn, totaldisk, totallimit, totalwarn
| foreach *disk *limit [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
  index AS Index
  homedisk AS "homePath Space"
  homelimit AS "homePath Limit"
  homewarn AS "Home Status"
  colddisk AS "coldPath Space"
  coldlimit AS "coldPath Limit"
  coldwarn AS "Cold Status"
  totaldisk AS "Total Space"
  totallimit AS "Total Space Limit"
  totalwarn AS "Total Space Status"
]]>
      </searchString>
    </table>
  </row>

  <row>
    <table id="retention_overview_volume_states">
      <title>Volume Usage</title>
      <option name="link.visible">false</option>
      <searchString><![CDATA[
earliest=@d 
[| rest /services/data/indexes search="totalEventCount!=0"
   | search homePath="volume:*" OR coldPath="volume:*"
   | fields title | rename title AS orig_index ]
state!="thawed" `_fb_summary_recs("*")`
| stats sum(sizeOnDiskMB) AS sizeOnDiskMB by orig_host, index, state
| eval state=if(state="cold", state, "home")
| stats sum(sizeOnDiskMB) AS sizeOnDiskMB
  by orig_host, state
| join type=left orig_host, index
  [| rest /services/data/indexes
   | fields homePath, title, splunk_server
   | rename title AS index, splunk_server AS orig_host ]
| rex field=homePath "^(?<home_vol>volume:\w+)"
| join type=left home_vol, orig_host
  [ | rest /services/configs/conf-indexes
    | search title="volume:*"
    | fields title, maxVolumeDataSizeMB, splunk_server
    | rename title AS home_vol, splunk_server AS orig_host ]
| stats sum(sizeOnDiskMB) AS totaldisk
  first(maxVolumeDataSizeMB) AS maxVolumeDataSizeMB
  by orig_host, home_vol
| eval vol_pct=round(totaldisk / maxVolumeDataSizeMB * 100, 1)
| sort orig_host - home_vol
| table orig_host, home_vol, totaldisk, maxVolumeDataSizeMB, vol_pct
| foreach totaldisk maxVolumeDataSizeMB [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
  orig_host AS Host
  home_vol AS Volume
  totaldisk AS "Disk Usage"
  maxVolumeDataSizeMB AS "Volume Limit"
  vol_pct AS "% of Capacity"
]]>
      </searchString>
    </table>

    <table id="retention_overview_time_states">
      <title>Time-Based Retention State</title>
      <option name="link.visible">false</option>
      <searchPostProcess>table orig_host, count, timewarn
| rename
    orig_host AS Host
    count AS Indexes
    timewarn AS "Time-Based Status" 
      </searchPostProcess>
    </table>

  </row>
  <row>
    <chart id="retention_overview_volume_index_detail">
      <title>Combined Volume Usage by Index Over Time</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">area</option>
      <option name="charting.chart.nullValueMode">connect</option>
      <option name="charting.chart.stackMode">stacked</option>
      <option name="charting.axisTitleX.text">Date</option>
      <option name="charting.axisTitleY.text">MBytes</option>
      <option name="charting.seriesColors">[0x416E79,0x967711,0x823825,0x59425A,0x94571A,0x5C7424,0x5C5433,0x85516A,0x324969,0x866523,0x40521D,0x602935,0xA7D4DF,0xFCDD77,0xE89E8B,0xBFA8C0,0xFABD80,0xC2DA8A,0xC2BA99,0xEBB7D0,0x98AFCF,0xECCB89,0xA6B883,0xC68F9B]</option>

      <earliestTime>-30d@d</earliestTime>
      <latestTime>now</latestTime>
      <searchString>
[| rest /services/data/indexes splunk_server=$volume_host$*
| search coldPath=$volume_title$* OR homePath=$volume_title$*
| rename title AS orig_index | fields orig_index | dedup orig_index ]
state!="thawed" `_fb_summary_recs_host($volume_host$)`
| bucket span=1d _time
| stats max(sizeOnDiskMB) AS sizeOnDiskMB by _time, path, state, index
| eval bookkeeping="$volume_title$"
| join type=left bookkeeping
[ | rest /servicesNS/-/-/configs/conf-indexes/$volume_title$ splunk_server=$volume_host$*
  | fields title, path, maxVolumeDataSizeMB
  | rename title AS bookkeeping, path AS wanted_path]
| rename comment AS "Set state to null for rows we don't want, stats will ignore."
| eval state=if(match(path, "^" . wanted_path . ".*"), state, null())
| stats sum(eval(if(isnotnull(state), sizeOnDiskMB, 0))) AS sizeOnDiskMB,
    sum(eval(if(state="hot", sizeOnDiskMB, 0))) AS hot_usage,
    sum(eval(if(state="warm", sizeOnDiskMB, 0))) AS warm_usage,
    sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS cold_usage
    first(maxVolumeDataSizeMB) AS maxVolumeDataSizeMB,
    by _time, index
| eventstats sum(sizeOnDiskMB) AS daily_usage by _time
| eventstats dc(index) AS idx_count, max(_time) AS latest
| timechart span=1d sum(sizeOnDiskMB) AS "Index Usage" by index</searchString>
    </chart>

    <chart id="retention_overview_volume_limit_detail">
      <title>Combined Data Usage vs. Limit Over Time</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">line</option>
      <option name="charting.chart.nullValueMode">connect</option>
      <option name="charting.axisTitleX.text">Time</option>
      <option name="charting.axisTitleY.text">MBytes</option>

      <earliestTime>-30d@d</earliestTime>
      <latestTime>now</latestTime>
      <searchString>
[| rest /services/data/indexes splunk_server=$volume_host$*
| search coldPath=$volume_title$* OR homePath=$volume_title$*
| rename title AS orig_index | fields orig_index | dedup orig_index ]
state!="thawed" `_fb_summary_recs_host($volume_host$)`
| bucket span=1d _time
| stats max(sizeOnDiskMB) AS sizeOnDiskMB by _time, path, state, index
| eval bookkeeping="$volume_title$"
| join type=left bookkeeping
[ | rest /servicesNS/-/-/configs/conf-indexes/$volume_title$ splunk_server=$volume_host$*
  | fields title, path, maxVolumeDataSizeMB
  | rename title AS bookkeeping, path AS wanted_path]
| rename comment AS "Set state to null for rows we don't want, stats will ignore."
| eval state=if(match(path, "^" . wanted_path . ".*"), state, null())
| stats sum(eval(if(isnotnull(state), sizeOnDiskMB, 0))) AS sizeOnDiskMB,
    sum(eval(if(state="hot", sizeOnDiskMB, 0))) AS hot_usage,
    sum(eval(if(state="warm", sizeOnDiskMB, 0))) AS warm_usage,
    sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS cold_usage
    first(maxVolumeDataSizeMB) AS maxVolumeDataSizeMB,
    by _time, index
| eventstats sum(sizeOnDiskMB) AS daily_usage by _time
| eventstats dc(index) AS idx_count, max(_time) AS latest
| timechart span=1d first(maxVolumeDataSizeMB) AS Limit, sum(sizeOnDiskMB) AS Usage</searchString>
    </chart>
  </row>

  <row>
    <table id="retention_overview_time_detail">
      <title>Time-Based Retention Status for $time_host$</title>
      <option name="link.visible">false</option>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs($time_host$, "*")`
| stats 
  sum(sizeOnDiskMB) AS totaldisk
  max(endEpoch) AS endEpoch,
  min(startEpoch) AS startEpoch
  by orig_host, index
| join type=left orig_host, index
  [ | rest /services/data/indexes splunk_server=$time_host$*
    | fields splunk_server title, maxTotalDataSizeMB, frozenTimePeriodInSecs
    | rename 
        splunk_server AS orig_host
        title AS index ]
| eval span_back=round(relative_time(now(), "@d+1h")) - startEpoch
| eval span_pct=round(span_back / frozenTimePeriodInSecs * 100)
| rename comment AS "1 - quar, 2 - warn, 3 - extreme"
| eval timewarn=case(totaldisk > .9 * maxTotalDataSizeMB AND span_pct < 50, 3,
                     totaldisk > .9 * maxTotalDataSizeMB AND span_pct < 90, 2,
                     totaldisk > .9 * maxTotalDataSizeMB AND span_back > frozenTimePeriodInSecs, 3,
                     span_back > frozenTimePeriodInSecs, 1)
| eval span_back=tostring(span_back, "duration")
| eval cutoff=now()-frozenTimePeriodInSecs
| eval frozenTimePeriodInSecs=tostring(frozenTimePeriodInSecs, "duration")
| eval disk_pct=round(totaldisk / maxTotalDataSizeMB * 100, 2) . "%"
| eval timewarn=case(timewarn=3, "extreme",
                     timewarn=2, "warn",
                     timewarn=1, "quar",
                     1=1, null())
| convert ctime(cutoff), ctime(*Epoch)
| rename comment AS "The disk space part helps make sense of the icons"
| table index, disk_pct, startEpoch, endEpoch, span_back, frozenTimePeriodInSecs, cutoff, timewarn
| rename index AS Index
  disk_pct AS "Index Capacity"
  startEpoch AS "Earliest Event"
  endEpoch AS "Latest Event"
  frozenTimePeriodInSecs AS "Retention Limit"
  cutoff AS "Retention Cutoff"
  timewarn AS "Time-Based Status"
  span_back AS "Available Data Span"]]>
      </searchString>
    </table>
  </row>

</form>
