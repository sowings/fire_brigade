<form class="formsearch" script="retention_overview.js,retention_overview_iconography.js,retention_overview_table_bars.js" stylesheet="retention_overview.css">
  <label>Retention Overview</label>

  <row>
    <html>
<div id="fire_brigade_help">
</div>
    </html>
  </row>

  <fieldset submitButton="false">
    <input type="text" token="bucket_host" searchWhenChanged="true" />
    <input type="text" token="disk_host" searchWhenChanged="true" />
  </fieldset>

  <searchTemplate>
earliest=@d `_fb_summary_recs("*")`
| stats sum(eval(if(state="hot" OR state="warm", sizeOnDiskMB, 0))) AS homedisk, 
  sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS colddisk,
  dc(eval(if(state="hot", path, null()))) AS hot, 
  dc(eval(if(state="warm", path, null()))) AS warm, 
  dc(eval(if(state="cold", path, null()))) AS cold, 
  sum(sizeOnDiskMB) AS totaldisk
  by orig_host, index
| join type=left orig_host, index
  [ | rest /services/data/indexes
    | fields splunk_server title, homePath.maxDataSizeMB, coldPath.maxDataSizeMB, maxTotalDataSizeMB, maxHotBuckets maxWarmDBCount
    | rename homePath.maxDataSizeMB AS homelimit
        coldPath.maxDataSizeMB AS coldlimit
        splunk_server AS orig_host
        title AS index ]
| eval homewarn=case(isnull(homelimit), null(), homedisk > .9 * homelimit, "homewarn", 1=1, null())
| eval coldwarn=case(isnull(coldlimit), null(), colddisk > .9 * coldlimit, "coldwarn", 1=1, null())
| eval totalwarn=if(totaldisk > .9 * maxTotalDataSizeMB, "totalwarn", null())
| eval hotbkt=case(hot > maxHotBuckets, "quar", hot > .9 * maxHotBuckets, "hotwarn", 1=1, null())
| eval warmbkt=if(warm > .9 * maxWarmDBCount, "warmwarn", null())
| stats count
  sum(hot) AS hot, sum(warm) AS warm, sum(cold) AS cold
  values(warmbkt) AS warmbkt, values(hotbkt) AS hotbkt
  values(totalwarn) AS totalwarn, values(homewarn) AS homewarn, values(coldwarn) AS coldwarn
  sum(*disk) AS *disk
  by orig_host
| fillnull value=0 colddisk
| table orig_host, count, hot, warm, cold, hotbkt, warmbkt, homedisk, homewarn, colddisk, coldwarn, totaldisk, totalwarn
  </searchTemplate>

  <row>
    <table id="retention_overview_bucket_states">
      <title>Bucket States</title>
      <option name="link.visible">false</option>
      <searchPostProcess>table orig_host, count, hot, hotbkt, warm, warmbkt, cold
| rename 
    orig_host AS Host
    count AS Indexes
    hot AS "Hot Buckets"
    hotbkt AS "Hot Status"
    warm AS "Warm Buckets"
    warmbkt AS "Warm Status"
    cold AS "Cold Buckets"
</searchPostProcess>
    </table>
  </row>

  <row>
    <table id="retention_overview_bucket_detail">
      <title>Bucket information for $bucket_host$</title>
      <option name="link.visible">false</option>
      <option name="count">50</option>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs($bucket_host$, "*")`
| stats 
  dc(eval(if(state="hot", path, null()))) AS hot
  dc(eval(if(state="warm", path, null()))) AS warm
  dc(eval(if(state="cold", path, null()))) AS cold
  by orig_host, index
| eval title=index
| join type=left [| rest /services/data/indexes splunk_server=$bucket_host$ | fields title, maxHotBuckets maxWarmDBCount ]
| eval hotbkt=case(hot > maxHotBuckets, "quar", hot > .9 * maxHotBuckets, "hotwarn", 1=1, null())
| eval warmbkt=if(warm > .9 * maxWarmDBCount, "warmwarn", null())
| table index, hot, maxHotBuckets, hotbkt, warm, warmbkt, maxWarmDBCount, cold
| rename 
  index AS Index
  hot AS "Hot Buckets"
  maxHotBuckets AS "Hot Limit"
  hotbkt AS "Hot Status"
  warm AS "Warm Buckets"
  maxWarmDBCount AS "Warm Limit"
  warmbkt AS "Warm Status"
  cold AS "Cold Buckets"]]>
      </searchString>
    </table>
  </row>

  <row>
    <table id="retention_overview_disk_states">
      <title>Disk States</title>
      <option name="link.visible">false</option>
      <searchPostProcess><![CDATA[table orig_host, count, homedisk, homewarn, colddisk, coldwarn, totaldisk, totalwarn
| foreach *disk [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
    orig_host AS Host
    count AS Indexes
    homedisk AS "homePath Space"
    homewarn AS "Home Status"
    colddisk AS "coldPath Space"
    coldwarn AS "Cold Status"
    totaldisk AS "Total Disk"
    totalwarn AS "Total Space Status"]]>
      </searchPostProcess>
    </table>
  </row>

  <row>
    <table id="retention_overview_disk_detail">
      <title>Disk information for $disk_host$</title>
      <option name="link.visible">false</option>
      <option name="count">50</option>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs($disk_host$, "*")`
| stats 
  sum(eval(if(state="hot" OR state="warm", sizeOnDiskMB, 0))) AS homedisk
  sum(eval(if(state="cold", sizeOnDiskMB, 0))) AS colddisk
  sum(sizeOnDiskMB) AS totaldisk
  by orig_host, index
| eval title=index
| join type=left [
  | rest /services/data/indexes splunk_server=$disk_host$
  | fields title, homePath.maxDataSizeMB, coldPath.maxDataSizeMB, maxTotalDataSizeMB  ]
| eval homewarn=case(isnull('homePath.maxDataSizeMB'), null(), homedisk > .9 * 'homePath.maxDataSizeMB', "homewarn", 1=1, null())
| eval coldwarn=case(isnull('coldPath.maxDataSizeMB'), null(), colddisk > .9 * 'coldPath.maxDataSizeMB', "coldwarn", 1=1, null())
| eval totalwarn=if(totaldisk > .9 * maxTotalDataSizeMB, "totalwarn", null())
| rename command AS "Yes, this is a redundant rename, but we want to pretty print"
| rename homePath.maxDataSizeMB AS homelimit, coldPath.maxDataSizeMB AS coldlimit, maxTotalDataSizeMB AS totallimit
| table index, homedisk, homelimit, homewarn, colddisk, coldlimit, coldwarn, totaldisk, totallimit, totalwarn
| foreach *disk *limit [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
  index AS Index
  homedisk AS "homePath Space"
  homelimit AS "homePath Limit"
  homewarn AS "Home Status"
  colddisk AS "coldPath Space"
  coldlimit AS "coldPath Limit"
  coldwarn AS "Cold Status"
  totaldisk AS "Total Space"
  totallimit AS "Total Space Limit"
  totalwarn AS "Total Space Status"
]]>
      </searchString>
    </table>
  </row>

  <row>
    <table id="retention_overview_volume_table">
      <title>Volume Usage - homePath</title>
      <searchString><![CDATA[
earliest=@d `_fb_summary_recs("*")`
| rex field=path "(?<bucket_parent>/mnt/(?:hot|cold))"
| stats count
  sum(sizeOnDiskMB) AS totaldisk
  by orig_host, bucket_parent
| eval path=bucket_parent
| join splunk_server, path [| rest /services/configs/conf-indexes | search title="volume:*" | fields title, maxVolumeDataSizeMB, path ]
| eval vol_pct=round(totaldisk / maxVolumeDataSizeMB * 100, 1)
| sort orig_host - title
| table orig_host, title, totaldisk, maxVolumeDataSizeMB, vol_pct
| foreach totaldisk maxVolumeDataSizeMB [ `_fb_mbytes_pretty(<<FIELD>>)` ]
| rename
  orig_host AS Host
  title AS Volume
  totaldisk AS "Disk Usage"
  maxVolumeDataSizeMB AS "Volume Limit"
  vol_pct AS "% of Capacity"
]]>
      </searchString>
    </table>

  </row>
</form>
