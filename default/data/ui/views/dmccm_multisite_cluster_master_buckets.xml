<form>
  <label>Multi-site Clustered Buckets Status (DMC or CM only)</label>
  <search id="cluster_master_buckets">
    <query>| rest /services/cluster/master/buckets splunk_server=$host$
| fields title, frozen, primaries_by_site.*, peers.*.server_name, peers.*.bucket_flags, peers.*.search_state
</query>
    <earliest></earliest>
    <latest></latest>
  </search>
  <search id="multisite">
    <query>| rest /services/cluster/config splunk_server=$host$ | search mode="master" | fields multisite | eval range=if(multisite="true", 1, 0) | rangemap None=1-1 severe=0-0 field=range</query>
    <earliest>0</earliest>
    <latest></latest>
    <done>
      <condition match="$result.multisite$ == &quot;false&quot;">
        <set token="show_multisite">$result.multisite$</set>
      </condition>
      <!-- Don't show this when multisite is true. -->
      <condition match="$result.multisite$ == &quot;true&quot;">
        <unset token="show_multisite"></unset>
      </condition>
    </done>
  </search>

  <row>
    <html>
<div id="fire_brigade_help">
This dashboard attempts to provide some information about the state of buckets
within the indexing clustered environment. Within an indexing cluster, buckets
may be standalone or cluster-aware. Cluster-aware buckets may be replica
copies (these do not contain the extra artifacts that make the data
searchable, but they provide data security), or they may be
searchable. Searchable copies may also be flagged as <i>primary</i>, and it is
these which are searched when looking for events. As a final layer, the
buckets may be "site aware" when multi-site clustering is used. Buckets minted
before the <code>multisite = true</code> setting (in <a
href="server.conf">server.conf</a> was enabled will only be single-site (read:
<i>not</i> site aware).
<p />
Within an indexing cluster, all buckets are identified by their "bucket
ID". This value is a string made up of the name of the index followed by the
unique bucket number (this must be unique per-host, see below), followed in
turn by the GUID of the indexer that ingested the data. A sample bucket ID
looks like this <code>main~0~4260C3CE-894E-4055-9EB4-D4594097B8C8</code>. The
panel titled <em>Unique Buckets</em> counts these across the entire indexing
cluster. By contrast, the far right of this row, the panel titled, <em>Total
Buckets</em> refers to the total number of <i>all</i> copies found within the
cluster.
<p />
In the middle of the top row is a panel titled <em>Frozen Buckets</em>. This
refers to the number of buckets within the cluster that have been marked as
<i>frozen</i>. An indexer that is part of an indexing cluster is responsible
for managing its own retention policies. However, the process of replacing
missing copies of a bucket (arguably the main point of indexer clustering) is
at odds with the notion of retiring buckets from service (freezing). When a
host needs to freeze a bucket in order to satisfy its indexing policy, it will
indicate this state change to the cluster master. At this point, the bucket
will no longer be "fixed up" if it goes missing. Any remaining copies which
are <i>searchable</i> can be promoted to primary so that the data will still
be available to searches. However, a <i>replica-only</i> copy will <b>not</b>
be fixed up, so the data may be unsearchable, <i>despite still being available
within the cluster</i>. This panel (in combination with the two on the
following row) shows the number of buckets marked as "frozen" within the
cluster. Whether or not the bucket is still searchable will determine which
panel of the two below (titled <em>Frozen Yet Searchable Buckets</em> and
<em>Frozen Replica-Only Buckets</em> respectively) will show the bucket count.
<p />
The bottom left panel counts buckets by their state. There are several states
represented. A <code>Replica</code> bucket is a non-searchable, backup copy of
the data. A bucket tagged as <code>Searchable</code> is a redundant searchable
copy of the data. If the bucket is marked as <code>Primary</code> this is a
subset of the <i>Searchable</i> category. This bucket as the search metadata
present, <i>and is specifically tagged as being the one to be searched.</i>
<p />
As mentioned in the prior paragraph, buckets marked as <code>Primary</code>
are the ones which will be searched by Splunk. Ensuring that the load of these
is balanced across the indexing infrastructure can help ensure good
performance of searches. The bottom right panel, <em>Primary Buckets by Host
(Search Load)</em> calls out the count of these primary buckets by indexer, to
provide an insight into the approximate search load borne by each.
<p />
</div>
    </html>
  </row>
  
  <fieldset>
    <input type="dropdown" token="host" searchWhenChanged="true">
      <label>Cluster Master</label>
      <fieldForValue>splunk_server</fieldForValue>
      <fieldForLabel>host</fieldForLabel>
      <selectFirstChoice>true</selectFirstChoice>
      <search>
	<query>| rest /services/server/info splunk_server=* | search server_roles=cluster_master</query>
      </search>
    </input>
  </fieldset>
  
  <row>
    <panel depends="$show_multisite$">
      <single>
        <title>Multi-Site Detected</title>
	<option name="link.visible">false</option>
        <option name="drilldown">none</option>
	<search base="multisite">
	</search>
        <drilldown>
	  <link>/app/fire_brigade/dmccm_cluster_master_buckets</link>
	</drilldown>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <single>
        <title>Unique Buckets</title>
        <search base="cluster_master_buckets">
          <query>stats count</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
	<option name="link.visible">false</option>
        <option name="drilldown">none</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Frozen Buckets</title>
        <search base="cluster_master_buckets">
          <query>search frozen=1 | stats count</query>
          <earliest>0</earliest>
          <latest></latest>
        </search>
	<option name="link.visible">false</option>
        <option name="drilldown">none</option>
      </single>
    </panel>
    <panel>
      <single>
        <title>Total Buckets</title>
        <search base="cluster_master_buckets">
          <query>fields peers.*.server_name
| rename peers.*.server_name AS *
| untable title guid host
| stats count</query>
        </search>
	<option name="link.visible">false</option>
	<option name="field">count</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Frozen Yet Searchable Buckets</title>
        <search base="cluster_master_buckets">
          <query><![CDATA[search frozen=1 | fields title peers.*.search_state peers.*.server_name peers.*.bucket_flags | foreach peers.*.server_name [ eval host_state=mvappend(host_state, 'peers.<<MATCHSTR>>.search_state' . ";" . 'peers.<<MATCHSTR>>.server_name' . ";" . 'peers.<<MATCHSTR>>.bucket_flags') ] | fields title, host_state | mvexpand host_state | search host_state="Searchable;*" host_state!="*;0x0" | eval host=mvindex(split(host_state, ";"), 1) | stats count by host | sort - count]]></query>
        </search>
        <option name="link.visible">false</option>
        <option name="charting.chart">column</option>
        <option name="charting.legend.placement">none</option>
      </chart>
    </panel>
    <panel>
      <table>
        <title>Frozen Replica-Only Buckets</title>
        <search base="cluster_master_buckets">
          <query><![CDATA[search frozen=1
| fields title peers.*.search_state, peers.*.server_name, peers.*.bucket_flags
| foreach peers.*.server_name [ eval host_state=mvappend(host_state, 'peers.<<MATCHSTR>>.search_state' . ";" . 'peers.<<MATCHSTR>>.server_name' . ";" . 'peers.<<MATCHSTR>>.bucket_flags') ]
| fields title, host_state
| mvexpand host_state
| search host_state="Nonsearchable;*"
| eval host=mvindex(split(host_state, ";"), 1)
| stats count by host
| sort - count]]></query>
        </search>
	<option name="link.visible">false</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Bucket Count by State</title>
        <search base="cluster_master_buckets">
          <query><![CDATA[| fields title, peers.*.bucket_flags, peers.*.search_state
| foreach peers.*.bucket_flags [ eval state_flags=mvappend(state_flags, 'peers.<<MATCHSTR>>.search_state' . ";" . 'peers.<<MATCHSTR>>.bucket_flags') ]
| fields title, state_flags
| mvexpand state_flags
| eval fields=split(state_flags, ";")
| eval state=mvindex(fields, 0), flags=mvindex(fields, 1)
| eval final_state=case(state="Nonsearchable", "Replica", state="Searchable" AND flags!="0x0", "Primary", state="Searchable", "Searchable")
| stats count by final_state]]></query>
        </search>
        <option name="link.visible">false</option>
        <option name="charting.chart">pie</option>
        <option name="charting.legend.placement">right</option>
      </chart>
    </panel>
    <panel>
      <input type="dropdown" token="site" searchWhenChanged="true">
        <label>Site</label>
        <search base="cluster_master_buckets">
          <query>| fields title, primaries_by_site.* | rename primaries_by_site.* AS * | untable title site guid | stats count by site</query>
        </search>
        <fieldForLabel>site</fieldForLabel>
        <fieldForValue>site</fieldForValue>
      </input>
      <chart>
        <title>Primary Buckets by Host / Site (Search Load)</title>
        <search base="cluster_master_buckets">
          <query>| fields title, primaries_by_site.* | rename primaries_by_site.* AS * | untable title site guid | stats values(site) AS sites by title, guid | search sites=$site$ | stats count by guid</query>
        </search>
        <option name="link.visible">false</option>
        <option name="charting.chart">column</option>
        <option name="charting.legend.placement">none</option>
        <option name="charting.axisTitleY.text">Count</option>
      </chart>
    </panel>
  </row>
</form>
<!-- | loadjob 1474588752.697 | eval site=replace(site,
     "^primaries_by_site\.", "") | stats values(site) AS sites by
     bucket, guid | search sites="site2" | stats
     count(eval(if(match(bucket, "^1;"), bucket, null()))) AS
     "Single-site" count(eval(if(match(bucket, "^0;"), bucket,
     null()))) AS "Multi-site" by guid -->
