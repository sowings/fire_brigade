<form class="formsearch" script="retention_age.js">
  <label>Bucket Age vs. Age Limit</label>

<!-- These search commands, inserted after the bucket call, seem to
     break the overall search. 
| extract auto=f fb_extract_bucket_type_time_source
| search [| rest /services/server/info splunk_server=$host$ | rename guid AS bucket_primary_guid | return bucket_primary_guid ]
-->

  <search id="retention_age_summary">
    <query>
`fb_data_from_today`
state!=thawed state!=hot `_fb_summary_recs($host$, $index$)`
| bucket _time span=1d
| fields _time, startEpoch, earliestTime, endEpoch, latestTime, eventCount, sizeOnDiskMB, guId, index, state, id, bucketId
    </query>
  </search>
  <search id="retention_age_rest">
    <query>
| `_fb_rest_index_config($host$, $index$)`
| eval fts=tostring(frozenTimePeriodInSecs, "commas")
| eval strf=tostring(frozenTimePeriodInSecs, "duration")
| eval cutoff=now() - frozenTimePeriodInSecs | convert ctime(cutoff)</query>
  </search>

  <row>
    <panel>
    <html>
<div id="fire_brigade_help">
The family of views in the Retention menu is aimed at helping
administrators visualize and thereby tune various retention parameters
for their indexed data. General information about retention settings
can be found in the Splunk documentation for <a
href="http://docs.splunk.com/Documentation/Splunk/latest/Indexer/Setaretirementandarchivingpolicy">version
6.0.x here</a>.
<p />
The time limit settings to force archival for Splunk data are values
given in seconds. Human readable forms of the current archival limit
(known as <code>frozenTimePeriodInSecs</code>) are provided. If the
value is shown with a plus sign (+), the number to the left of the plus
sign indicates a number of days. The right-hand panel in the top row
(titled <em>Cutoff Time</em>) shows the time which is
<code>frozenTimePeriodInSecs</code> ago. Buckets with their latest
events <b>before</b> this time are subject to freezing. If the
selected index is "All Indexes", this row will be empty.
<p />
For the "oldest bucket" panels, 
the "age" of the bucket is taken to represent the span of time from
the <i>latest</i> event in the bucket to "now".
In these panels, the age of the oldest bucket is shown
in seconds (caculated from the time the dashboard loads), and a
human-readable form is also provided. On the right, the oldest
bucket's most recent event (sometimes known as the "latest time") is
shown. This allows easy comparison to 
the cutoff time from the panel above. 
The latest time serves as the
endpoint of the bucket boundary, and dictates when this bucket would
be eligible for freezing (archival) with a time-based retention
policy.
If the original indexer where the data was indexed has been retired or
gone missing, the host field will read as <em>Missing Indexer</em>. In
rows where the <em>Event Count</em> field is zero (0), this represents
a non-searchable "replica" bucket copy.
<strong>For the "Oldest Bucket"
group, thawed buckets are expressly excluded, as they are not governed
by any retention policy.</strong>
<p />
To give administrators an indication of which buckets are the oldest
in the index, a table of the ten oldest buckets is shown. These
represent the candidates for archival, when an archival policy
(whether <em>time-based</em> or <em>size-based</em>) is enacted.
Any buckets that have events (<em>Earliest Time</em> or <em>Latest
Time</em>) that are ahead of the curent time, the marker "(FUTURE)"
will be appended to the vaulues in the <em>Furthest Event Back</em>
and/or <em>Bucket Age</em> fields. <strong>Note: These
"(FUTURE)" markers may indicate problems parsing time stamps of
incoming events.</strong>
For a <em>time-based</em> policy, buckets will not be frozen until
their latest event is further back than the
<code>frozenTimePeriodInSecs</code>, represented on this dashboard as
the <em>Cutoff Time</em>. For a <em>size-based</em> policy, the oldest
buckets are culled until the size of the index is once again under the
limit.
<p />
Below the <em>Ten Oldest...</em> table is one titled <em>Ballast
Buckets in This Group</em>. These are buckets which have a latest
event (against which the "age" of the bucket is evaluated) that is in
the future. This means that the bucket in question is likely to be
skipped (it will not be the "oldest") when selecting which bucket to
move to satisfy the retention policy. This bucket will then take up
space that won't be recycled for use by new data. The table also calls
out the last time that the bucket was written to, to highlight the
possible disconnect with time stamps of ingested data.
</div>
    </html>
    </panel>
  </row>

  <fieldset>
    <input type="dropdown" token="host" searchWhenChanged="true">
      <label>Host</label>
      <fieldForValue>orig_host</fieldForValue>
      <fieldForLabel>orig_host</fieldForLabel>
      <search>
	<query>| inputlookup fb_hostname_index_cache | stats count by orig_host</query>
      </search>
    </input>
    <!-- pre-process a macro with a tag for volume: -->
    <!-- populate the search with volume: in the value, select valid
	 volumes for host -->
    <input type="dropdown" token="index" searchWhenChanged="true">
      <label>Index</label>
      <choice value="*">All indexes</choice>
      <default>*</default>
      <fieldForValue>orig_index</fieldForValue>
      <fieldForLabel>orig_index</fieldForLabel>
      <search>
	<query>| inputlookup fb_hostname_index_cache where orig_host=$host$ | stats count by orig_index</query>
      </search>
    </input>
  </fieldset>

  <row>
    <panel>
    <single id="retention_age_freeze_label">
<!--      <title>Frozen Time Limit Setting (Raw)</title> -->
      <option name="link.visible">false</option>
      <option name="underLabel">Seconds</option>
      <option name="field">fts</option>
      <search base="retention_age_rest">
      </search>
    </single>

    <single>
<!--      <title>Frozen Time Limit (Human Readable)</title> -->
      <option name="link.visible">false</option>
      <option name="field">strf</option>
      <option name="underLabel">Human-Readable</option>
      <search base="retention_age_rest">
      </search>
    </single>
    </panel>
    <panel>
    <single>
      <title>Cutoff Time</title>
      <option name="link.visible">false</option>
      <option name="field">cutoff</option>
      <search base="retention_age_rest">
      </search>
    </single>
    </panel>
  </row>

  <row>
    <panel>
    <single id="retention_age_oldest_label">
<!--      <title>Oldest Bucket's Age in Seconds</title> -->
      <option name="link.visible">false</option>
      <option name="field">age</option>
      <option name="underLabel">Seconds</option>
      <search base="retention_age_summary">
	<query>`_fb_where_today`
| stats min(endEpoch) AS bucket_lt
| eval age=tostring(now() - bucket_lt, "commas")
	</query>
      </search>
    </single>
    <single>
<!--      <title>Oldest Bucket's Age in Seconds</title> -->
      <option name="link.visible">false</option>
      <option name="field">age</option>
      <option name="underLabel">Human-Readable</option>
      <search base="retention_age_summary">
	<query>`_fb_where_today`
| stats min(endEpoch) AS bucket_lt
| eval age=tostring(now() - bucket_lt, "duration")
	</query>
      </search>
    </single>
    </panel>
    <panel>
    <single>
      <title>Oldest Bucket in This Group</title>
      <option name="link.visible">false</option>
      <option name="field">bucket_lt</option>
      <search base="retention_age_summary">
	<query>`_fb_where_today`
| stats min(endEpoch) AS bucket_lt | convert ctime(bucket_lt)
	</query>
      </search>
    </single>
    </panel>
  </row>

  <row>
    <panel>
    <table>
      <title>Ten Oldest (Neither Thawed nor Hot) Monitored Buckets in This Group</title>
      <option name="link.visible">false</option>
      <option name="drilldown">row</option>
      <search base="retention_age_summary">
	<query><![CDATA[`_fb_where_today`
| stats values(endEpoch) AS bucket_lt,
    values(startEpoch) AS bucket_et,
    first(eventCount) AS eventCount,
    max(sizeOnDiskMB) AS sizeOnDiskMB
    first(index) AS index
    first(id) AS id
    by bucketId
| sort 10 bucket_lt
| rex field=bucketId "^[^~]+~[^~]+~(?<guId>[^~]+)$"
| eval distance=tostring(if(now() > bucket_lt, now() - bucket_lt, bucket_lt - now()), "duration")
| eval bucket_age=if(now() > bucket_lt, distance, "+ " . distance . " (FUTURE)")
| eval distance=tostring(if(now() > bucket_lt, now() - bucket_lt, bucket_lt - now()), "duration")
| eval max_back=if(now() > bucket_et, distance, "+ " . distance . " (FUTURE)")
| convert ctime(bucket_lt)
| convert ctime(bucket_et)
| `_fb_mbytes_pretty(sizeOnDiskMB)`
| lookup fb_services_server_info_cache guid AS guId OUTPUT splunk_server AS host
| fillnull host value="Missing Indexer"
| table host, index, id, eventCount, sizeOnDiskMB, bucket_et, max_back, bucket_lt, bucket_age
| rename bucket_lt AS "Latest Time",
    bucket_et AS "Earliest Time",
    index AS Index,
    id AS "Bucket ID",
    eventCount AS "Event Count",
    sizeOnDiskMB AS "Bucket Size",
    host AS "Source Server"
    bucket_age AS "Bucket Age"
    max_back AS "Furthest Event Back"]]>
	</query>
      </search>
      <drilldown>
        <link><![CDATA[
/app/fire_brigade/lolrus?form.host=$form.host$&form.index=$row.Index$&form.bucket_id=$row.Bucket ID$]]>
	</link>
      </drilldown>
    </table>
    </panel>
  </row>

  <row>
    <panel>
    <table>
      <title>Ballast Buckets in This Group</title>
      <option name="link.visible">false</option>
      <search>
	<query>`fb_data_from_today`
state!=thawed state!=hot `_fb_summary_recs($host$, $index$)`
| dedup bucketId
| where endEpoch > now()
| eval distance=tostring(if(now() > endEpoch, now() - endEpoch, endEpoch - now()), "duration")
| eval bucket_age=if(now() > endEpoch, distance, "+ " . distance . " (FUTURE)")
| eval distance=tostring(if(now() > endEpoch, now() - endEpoch, endEpoch - now()), "duration")
| eval max_back=if(now() > startEpoch, distance, "+ " . distance . " (FUTURE)")
| convert ctime(endEpoch)
| convert ctime(startEpoch)
| eval minted=round(strptime(modTime, "%m/%d/%Y:%H:%M:%S"), 0)
| convert ctime(minted)
| eval pathLoc=case(state="cold", "coldPath", state="thawed", "thawedPath", 1=1, "homePath")
| table host, index, id, state, pathLoc, eventCount, sizeOnDiskMB, startEpoch, max_back, endEpoch, bucket_age, minted
| `_fb_mbytes_pretty(sizeOnDiskMB)`
| rename endEpoch AS "Latest Time",
    startEpoch AS "Earliest Time",
    index AS Index,
    id AS "Bucket ID",
    state AS State
    eventCount AS "Event Count",
    sizeOnDiskMB AS "Bucket Size",
    host AS "Source Server"
    pathLoc AS "Path Setting"
    bucket_age AS "Bucket Age"
    minted AS "Last Mod. Time"
    max_back AS "Furthest Event Back"</query>
      </search>
    </table>
    </panel>
  </row>

  <row>
    <panel>
    <chart>
      <title>Maximal Span (in Days) in This Group</title>
      <option name="link.visible">false</option>
      <option name="charting.chart">line</option>
      <option name="charting.chart.nullValueMode">connect</option>
      <option name="charting.axisTitleX.text">Time</option>
      <!-- Plots showing long term trends don't need to worry too much
           about the @d part; we may only get 29 days for a time-zone
	   shifted environment, but that's still good enough to show
	   the trend -->
      <search>
	<query>
state!=hot `_fb_summary_recs($host$, $index$)`
| bucket _time span=1d
| fields _time, startEpoch, earliestTime, endEpoch, latestTime, state
| `_fb_startEpoch_from_earliestTime`
| `_fb_endEpoch_from_latestTime`
| eval state=if(state="thawed", "Thawed", "Normal")
| stats min(startEpoch) AS startEpoch,
        max(endEpoch) AS endEpoch
        by _time, state
| eventstats max(endEpoch) AS abs_latest, min(startEpoch) AS abs_earliest by _time
| eval bucket_days=round((endEpoch - startEpoch) / 86400, 2)
| eval outside_days=round((abs_latest - abs_earliest) / 86400, 2)
| eval bucket_span=if(state="Thawed", outside_days, bucket_days)
| timechart span=1d first(bucket_span) AS "Bucket Days" by state</query>
        <earliest>-30d@d</earliest>
        <latest>now</latest>
      </search>
    </chart>
    </panel>
  </row>

</form>
